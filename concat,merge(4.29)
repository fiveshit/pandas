df1 = pd.DataFrame(np.ones((3,4)),columns = ['a','b','c','d'])
'''
     a    b    c    d
0  1.0  1.0  1.0  1.0
1  1.0  1.0  1.0  1.0
2  1.0  1.0  1.0  1.0
'''
df2 = pd.DataFrame(np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]]),columns = ['a','b','c','d'])
'''
   a   b   c   d
0  1   2   3   4
1  5   6   7   8
2  9  10  11  12
'''
df3 = pd.DataFrame(np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]]),columns = ['a','b','c','d'])
'''
   a   b   c   d
0  1   2   3   4
1  5   6   7   8
2  9  10  11  12
'''
res = pd.concat([df1,df2,df3],axis = 0, ignore_index = True)  #axis = 0 (up and down merge) axis = 1 (left and right merge)
'''
     a     b     c     d
0  1.0   1.0   1.0   1.0
1  1.0   1.0   1.0   1.0
2  1.0   1.0   1.0   1.0
3  1.0   2.0   3.0   4.0
4  5.0   6.0   7.0   8.0
5  9.0  10.0  11.0  12.0
6  1.0   2.0   3.0   4.0
7  5.0   6.0   7.0   8.0
8  9.0  10.0  11.0  12.0
'''
df1 = pd.DataFrame(np.ones((3,4))*0,columns = ['a','b','c','d'],index = [1,2,3])
'''
     a    b    c    d
1  0.0  0.0  0.0  0.0
2  0.0  0.0  0.0  0.0
3  0.0  0.0  0.0  0.0
'''
df2 = pd.DataFrame(np.arange(12).reshape(3,4),columns = ['a','b','c','d'],index = [2,1,3]
'''
   a  b   c   d
2  0  1   2   3
1  4  5   6   7
3  8  9  10  11
'''

res = pd.concat([df1,df2],join = 'inner',ignore_index = True) # default join = outer (blank spcae fill NAN)

'''
     a    b     c     d
0  0.0  0.0   0.0   0.0
1  0.0  0.0   0.0   0.0
2  0.0  0.0   0.0   0.0
3  0.0  1.0   2.0   3.0
4  4.0  5.0   6.0   7.0
5  8.0  9.0  10.0  11.0
'''

res = pd.concat([df1,df2],axis = 1,join_axes = [df1.index]) # consider df1

'''
     a    b    c    d  a  b   c   d
1  0.0  0.0  0.0  0.0  4  5   6   7
2  0.0  0.0  0.0  0.0  0  1   2   3
3  0.0  0.0  0.0  0.0  8  9  10  11
'''

res = df1.append(df2,ignore_index = True) # ignore_index = True (ignore left row number)
'''
     a    b     c     d
0  0.0  0.0   0.0   0.0
1  0.0  0.0   0.0   0.0
2  0.0  0.0   0.0   0.0
3  0.0  1.0   2.0   3.0
4  4.0  5.0   6.0   7.0
5  8.0  9.0  10.0  11.0
'''

------merging two df by key/keys (maybe uesd in database)---
left = pd.DataFrame({'Key':['K0','K1','k2','K3'],
                       'A':['K4','K5','k6','K7'],
                       'B':['K8','K9','k10','K11']})
'''
    A    B Key
0  K4   K8  K0
1  K5   K9  K1
2  k6  k10  k2
3  K7  K11  K3
'''
right = pd.DataFrame({'Key':['0','1','2','3'],
                        'A':['4','5','6','7'],
                        'B':['8','9','10','11']})
'''
   A   B Key
0  4   8   0
1  5   9   1
2  6  10   2
3  7  11   3
'''

res = pd.merge(left,right,on = 'Key') # on 'Key' merge
'''
Empty DataFrame
Columns: [A_x, B_x, Key, A_y, B_y]
Index: []
'''

res = pd.merge(left,right,on = 'Key',how = 'left') #bases left fill
'''
  A_x  B_x Key  A_y  B_y
0  K4   K8  K0  NaN  NaN
1  K5   K9  K1  NaN  NaN
2  k6  k10  k2  NaN  NaN
3  K7  K11  K3  NaN  NaN
'''
res = pd.merge(left,right,on = 'Key',how = 'left',indicator = True) # indicator (merge way) 
'''
  A_x  B_x Key  A_y  B_y     _merge
0  K4   K8  K0  NaN  NaN  left_only
1  K5   K9  K1  NaN  NaN  left_only
2  k6  k10  k2  NaN  NaN  left_only
3  K7  K11  K3  NaN  NaN  left_only
'''
res = pd.merge(left,right,left_index = True,right_index = True)
'''
  A_x  B_x Key_x A_y B_y Key_y
0  K4   K8    K0   4   8     0
1  K5   K9    K1   5   9     1
2  k6  k10    k2   6  10     2
3  K7  K11    K3   7  11     3
'''

res = pd.merge(left,right,on= 'Key',suffixes = ['_left','_right'],how = 'outer') # suffixes name is same but content is different
'''
  A_left B_left Key A_right B_right
0     K4     K8  K0     NaN     NaN
1     K5     K9  K1     NaN     NaN
2     k6    k10  k2     NaN     NaN
3     K7    K11  K3     NaN     NaN
4    NaN    NaN   0       4       8
5    NaN    NaN   1       5       9
6    NaN    NaN   2       6      10
7    NaN    NaN   3       7      11
'''



